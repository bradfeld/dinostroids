var O="@vercel/analytics",L="1.5.0",_=()=>{window.va||(window.va=function(...o){(window.vaq=window.vaq||[]).push(o)})};function h(){return typeof window<"u"}function v(){try{let e="production";if(e==="development"||e==="test")return"development"}catch{}return"production"}function R(e="auto"){if(e==="auto"){window.vam=v();return}window.vam=e}function D(){return(h()?window.vam:v())||"production"}function l(){return D()==="development"}function C(e){return e.scriptSrc?e.scriptSrc:l()?"https://va.vercel-scripts.com/v1/script.debug.js":e.basePath?`${e.basePath}/insights/script.js`:"/_vercel/insights/script.js"}function y(e={debug:!0}){var o;if(!h())return;R(e.mode),_(),e.beforeSend&&((o=window.va)==null||o.call(window,"beforeSend",e.beforeSend));let r=C(e);if(document.head.querySelector(`script[src*="${r}"]`))return;let t=document.createElement("script");t.src=r,t.defer=!0,t.dataset.sdkn=O+(e.framework?`/${e.framework}`:""),t.dataset.sdkv=L,e.disableAutoTrack&&(t.dataset.disableAutoTrack="1"),e.endpoint?t.dataset.endpoint=e.endpoint:e.basePath&&(t.dataset.endpoint=`${e.basePath}/insights`),e.dsn&&(t.dataset.dsn=e.dsn),t.onerror=()=>{let s=l()?"Please check if any ad blockers are enabled and try again.":"Be sure to enable Web Analytics for your project and deploy again. See https://vercel.com/docs/analytics/quickstart for more information.";console.log(`[Vercel Web Analytics] Failed to load script from ${r}. ${s}`)},l()&&e.debug===!1&&(t.dataset.debug="false"),document.head.appendChild(t)}var a,I;function E(){return a=document.getElementById("gameCanvas"),I=a.getContext("2d"),d(),{canvas:a,ctx:I}}function d(){a&&(console.log("Resizing canvas to fit window..."),a.width=window.innerWidth,a.height=window.innerHeight)}async function b(){console.log("Fetching global games played count...");try{let e=new AbortController,o=setTimeout(()=>e.abort(),3e3),r=await fetch("/api/gamesPlayed",{signal:e.signal,cache:"no-store"});if(clearTimeout(o),!r.ok)throw console.warn(`API returned error status: ${r.status}`),new Error(`HTTP error! status: ${r.status}`);let t=await r.json();return typeof t.count=="number"?(console.log(`Global games played count: ${t.count}`),t.count):(console.warn("Received invalid count from API."),50)}catch(e){return e.name==="AbortError"?console.error("API request timed out after 3 seconds"):console.error("Failed to fetch games played count:",e),console.log("Using fallback games played count: 50"),50}}async function S(){console.log("Fetching leaderboard data...");try{let e=new AbortController,o=setTimeout(()=>e.abort(),5e3),r=await fetch("/api/leaderboard",{signal:e.signal,cache:"no-store",headers:{Accept:"application/json"}});if(clearTimeout(o),!r.ok)throw console.warn(`Leaderboard API returned error status: ${r.status}`),new Error(`HTTP error! status: ${r.status}`);let t=await r.json();return console.log("Leaderboard data received:",t.length?`${t.length} entries`:"Empty array"),t.length>0&&console.log("First entry:",JSON.stringify(t[0])),t}catch(e){return console.error("Failed to fetch leaderboard:",e),[]}finally{console.log("Leaderboard fetch completed")}}var F=Math.PI*2;var B=.07*3,u=.18*3;var m=120,f=.6*3,g=1.6*3;var V={easy:{playerAcceleration:u,shootCooldown:m,asteroidMinSpeed:f,asteroidSpeedVariation:g,initialAsteroidCountBase:2,lives:5},medium:{playerAcceleration:u*1.5,shootCooldown:Math.floor(m*.7),asteroidMinSpeed:f*1.5,asteroidSpeedVariation:g*1.2,initialAsteroidCountBase:3,lives:3},difficult:{playerAcceleration:u*2,shootCooldown:Math.floor(m*.5),asteroidMinSpeed:f*2,asteroidSpeedVariation:g*1.5,initialAsteroidCountBase:4,lives:2}},p={BIG:"BIG",MEDIUM:"MEDIUM",LITTLE:"LITTLE"},U={[p.BIG]:{baseSize:45,score:20},[p.MEDIUM]:{baseSize:25,score:50},[p.LITTLE]:{baseSize:15,score:100}},w={small:"./images/bront.png",medium:"./images/steg.png",large:"./images/trex.png"};var $={small:null,medium:null,large:null};function A(e){console.log("Preloading dinosaur images...");let o=0,r=Object.keys(w).length,t=()=>{console.log("All dinosaur images loaded successfully!"),e&&e()},s=n=>{console.log(`${n} dinosaur image loaded.`),o++,o===r&&t()},x=(n,c)=>{console.error(`Error loading ${n} dinosaur image:`,c),o++,o===r&&t()};Object.entries(w).forEach(([n,c])=>{let i=new Image;i.onload=()=>s(n),i.onerror=P=>x(n,P),i.src=c,$[n]=i})}var k=0,M=[];function T(){console.log("Initializing game...");let{canvas:e}=E();window.addEventListener("resize",d),A(()=>{console.log("Images loaded, proceeding with game initialization..."),Promise.allSettled([(async()=>{try{k=await b()}catch(o){console.error("Failed to fetch games played:",o)}})(),(async()=>{try{M=await S()}catch(o){console.error("Failed to fetch leaderboard:",o)}})()]).then(()=>{console.log("Game data loaded, showing start screen")})})}y();document.addEventListener("DOMContentLoaded",()=>{T()});
