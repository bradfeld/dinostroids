var H="@vercel/analytics",B="1.5.0",V=()=>{window.va||(window.va=function(...t){(window.vaq=window.vaq||[]).push(t)})};function P(){return typeof window<"u"}function O(){try{let e="production";if(e==="development"||e==="test")return"development"}catch{}return"production"}function U(e="auto"){if(e==="auto"){window.vam=O();return}window.vam=e}function W(){return(P()?window.vam:O())||"production"}function p(){return W()==="development"}function Y(e){return e.scriptSrc?e.scriptSrc:p()?"https://va.vercel-scripts.com/v1/script.debug.js":e.basePath?`${e.basePath}/insights/script.js`:"/_vercel/insights/script.js"}function L(e={debug:!0}){var t;if(!P())return;U(e.mode),V(),e.beforeSend&&((t=window.va)==null||t.call(window,"beforeSend",e.beforeSend));let n=Y(e);if(document.head.querySelector(`script[src*="${n}"]`))return;let o=document.createElement("script");o.src=n,o.defer=!0,o.dataset.sdkn=H+(e.framework?`/${e.framework}`:""),o.dataset.sdkv=B,e.disableAutoTrack&&(o.dataset.disableAutoTrack="1"),e.endpoint?o.dataset.endpoint=e.endpoint:e.basePath&&(o.dataset.endpoint=`${e.basePath}/insights`),e.dsn&&(o.dataset.dsn=e.dsn),o.onerror=()=>{let l=p()?"Please check if any ad blockers are enabled and try again.":"Be sure to enable Web Analytics for your project and deploy again. See https://vercel.com/docs/analytics/quickstart for more information.";console.log(`[Vercel Web Analytics] Failed to load script from ${n}. ${l}`)},p()&&e.debug===!1&&(o.dataset.debug="false"),document.head.appendChild(o)}var r,i;function _(){return r=document.getElementById("gameCanvas"),i=r.getContext("2d"),h(),{canvas:r,ctx:i}}function u(){return{canvas:r,ctx:i}}function h(){r&&(console.log("Resizing canvas to fit window..."),r.width=window.innerWidth,r.height=window.innerHeight)}function f(e="black"){!i||!r||(i.clearRect(0,0,r.width,r.height),i.fillStyle=e,i.fillRect(0,0,r.width,r.height))}async function R(){console.log("Fetching global games played count...");try{let e=new AbortController,t=setTimeout(()=>e.abort(),3e3),n=await fetch("/api/gamesPlayed",{signal:e.signal,cache:"no-store"});if(clearTimeout(t),!n.ok)throw console.warn(`API returned error status: ${n.status}`),new Error(`HTTP error! status: ${n.status}`);let o=await n.json();return typeof o.count=="number"?(console.log(`Global games played count: ${o.count}`),o.count):(console.warn("Received invalid count from API."),50)}catch(e){return e.name==="AbortError"?console.error("API request timed out after 3 seconds"):console.error("Failed to fetch games played count:",e),console.log("Using fallback games played count: 50"),50}}async function k(){console.log("Fetching leaderboard data...");try{let e=new AbortController,t=setTimeout(()=>e.abort(),5e3),n=await fetch("/api/leaderboard",{signal:e.signal,cache:"no-store",headers:{Accept:"application/json"}});if(clearTimeout(t),!n.ok)throw console.warn(`Leaderboard API returned error status: ${n.status}`),new Error(`HTTP error! status: ${n.status}`);let o=await n.json();return console.log("Leaderboard data received:",o.length?`${o.length} entries`:"Empty array"),o.length>0&&console.log("First entry:",JSON.stringify(o[0])),o}catch(e){return console.error("Failed to fetch leaderboard:",e),[]}finally{console.log("Leaderboard fetch completed")}}var ne=Math.PI*2;var re=.07*3,w=.18*3;var y=120,v=.6*3,x=1.6*3;var ae={easy:{playerAcceleration:w,shootCooldown:y,asteroidMinSpeed:v,asteroidSpeedVariation:x,initialAsteroidCountBase:2,lives:5},medium:{playerAcceleration:w*1.5,shootCooldown:Math.floor(y*.7),asteroidMinSpeed:v*1.5,asteroidSpeedVariation:x*1.2,initialAsteroidCountBase:3,lives:3},difficult:{playerAcceleration:w*2,shootCooldown:Math.floor(y*.5),asteroidMinSpeed:v*2,asteroidSpeedVariation:x*1.5,initialAsteroidCountBase:4,lives:2}},E={BIG:"BIG",MEDIUM:"MEDIUM",LITTLE:"LITTLE"},ie={[E.BIG]:{baseSize:45,score:20},[E.MEDIUM]:{baseSize:25,score:50},[E.LITTLE]:{baseSize:15,score:100}},I={small:"./images/bront.png",medium:"./images/steg.png",large:"./images/trex.png"};var z={small:null,medium:null,large:null};function C(e){console.log("Preloading dinosaur images...");let t=0,n=Object.keys(I).length,o=()=>{console.log("All dinosaur images loaded successfully!"),e&&e()},l=a=>{console.log(`${a} dinosaur image loaded.`),t++,t===n&&o()},m=(a,g)=>{console.error(`Error loading ${a} dinosaur image:`,g),t++,t===n&&o()};Object.entries(I).forEach(([a,g])=>{let d=new Image;d.onload=()=>l(a),d.onerror=F=>m(a,F),d.src=g,z[a]=d})}var D={},S=null,b=null;function $(){window.addEventListener("keydown",q),window.addEventListener("keyup",K)}function q(e){D[e.code]=!0,e.code==="Space"&&S&&S(),(e.code==="KeyH"||e.key==="h")&&b&&b()}function K(e){D[e.code]=!1}function N(e){S=e}function M(e){b=e}var J=!1,c=!1,s=!1;var A=0,Z=[];function T(){let{canvas:e,ctx:t}=u();f("black"),t.fillStyle="white",t.font="bold 48px Arial",t.textAlign="center",t.fillText("DINOSTROIDS",e.width/2,e.height/3),t.font="24px Arial",t.fillText("Press SPACE to start",e.width/2,e.height/2),t.fillText("Press H for help",e.width/2,e.height/2+40),A>0&&(t.font="16px Arial",t.fillText(`Games Played: ${A}`,e.width/2,e.height-50))}function j(){let{canvas:e,ctx:t}=u();f("black"),t.fillStyle="white",t.font="bold 36px Arial",t.textAlign="center",t.fillText("HOW TO PLAY",e.width/2,100),t.font="20px Arial",t.textAlign="left";let n=["CONTROLS:","\u2022 Arrow Keys: Move ship","\u2022 Space: Fire","\u2022 H: Toggle help screen","","OBJECTIVE:","\u2022 Destroy all dinosaur asteroids","\u2022 Avoid collisions","\u2022 Score as many points as possible"],o=150,l=30;n.forEach((m,a)=>{t.fillText(m,e.width/4,o+a*l)}),t.font="24px Arial",t.textAlign="center",t.fillText("Press H to return",e.width/2,e.height-50)}function Q(){if(s||c)return;console.log("Starting game..."),c=!0,J=!0;let{canvas:e,ctx:t}=u();f("black"),t.fillStyle="white",t.font="bold 24px Arial",t.textAlign="center",t.fillText("Game started! (Game implementation coming soon)",e.width/2,e.height/2)}function X(){c||(s=!s,s?j():T())}function G(){console.log("Initializing game...");let{canvas:e}=_();window.addEventListener("resize",()=>{h(),c||(s?j():T())}),$(),N(()=>{!c&&!s&&Q()}),M(()=>{X()}),C(()=>{console.log("Images loaded, proceeding with game initialization..."),Promise.allSettled([(async()=>{try{A=await R()}catch(t){console.error("Failed to fetch games played:",t)}})(),(async()=>{try{Z=await k()}catch(t){console.error("Failed to fetch leaderboard:",t)}})()]).then(()=>{console.log("Game data loaded, showing start screen"),T()})})}L();document.addEventListener("DOMContentLoaded",()=>{G()});
